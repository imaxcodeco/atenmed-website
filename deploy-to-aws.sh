#!/bin/bash

###############################################################################
# DEPLOY SCRIPT PARA AWS - AtenMed v2.0
# Execute este script no servidor AWS (atenmed.com.br)
###############################################################################

echo "============================================="
echo "üöÄ DEPLOY AtenMed v2.0 para AWS"
echo "============================================="
echo ""

# Cores para output
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# Configura√ß√µes
PROJECT_DIR="/var/www/atenmed"  # Ajuste se necess√°rio
BRANCH="reorganizacao-estrutura"

# Fun√ß√£o para log
log_step() {
    echo -e "${GREEN}‚úì $1${NC}"
}

log_warning() {
    echo -e "${YELLOW}‚ö† $1${NC}"
}

log_error() {
    echo -e "${RED}‚úó $1${NC}"
}

# 1. Backup do .env
echo "1Ô∏è‚É£ Fazendo backup do .env..."
if [ -f "$PROJECT_DIR/.env" ]; then
    cp "$PROJECT_DIR/.env" "$PROJECT_DIR/.env.backup.$(date +%Y%m%d_%H%M%S)"
    log_step ".env backup criado"
else
    log_warning ".env n√£o encontrado - ser√° necess√°rio configurar"
fi

# 2. Navegar para o diret√≥rio
echo ""
echo "2Ô∏è‚É£ Navegando para diret√≥rio do projeto..."
cd "$PROJECT_DIR" || {
    log_error "Diret√≥rio $PROJECT_DIR n√£o encontrado!"
    exit 1
}
log_step "Diret√≥rio: $(pwd)"

# 3. Atualizar c√≥digo do GitHub
echo ""
echo "3Ô∏è‚É£ Atualizando c√≥digo do GitHub..."
git fetch origin
git checkout $BRANCH
git pull origin $BRANCH
log_step "C√≥digo atualizado com sucesso!"

# 4. Instalar depend√™ncias
echo ""
echo "4Ô∏è‚É£ Instalando/atualizando depend√™ncias..."
npm install
log_step "Depend√™ncias instaladas!"

# 5. Verificar se .env existe
echo ""
echo "5Ô∏è‚É£ Verificando configura√ß√µes..."
if [ ! -f ".env" ]; then
    log_warning "Arquivo .env n√£o encontrado!"
    echo "üìù Criando .env a partir do env.example..."
    cp env.example .env
    log_warning "IMPORTANTE: Configure o arquivo .env com suas credenciais!"
    echo "Execute: nano .env"
else
    log_step ".env encontrado"
fi

# 6. Verificar MongoDB
echo ""
echo "6Ô∏è‚É£ Verificando MongoDB..."
if systemctl is-active --quiet mongod; then
    log_step "MongoDB est√° rodando"
else
    log_warning "MongoDB n√£o est√° rodando!"
    echo "Tentando iniciar MongoDB..."
    sudo systemctl start mongod
    if systemctl is-active --quiet mongod; then
        log_step "MongoDB iniciado com sucesso!"
    else
        log_error "Falha ao iniciar MongoDB. Inicie manualmente."
    fi
fi

# 7. Parar PM2
echo ""
echo "7Ô∏è‚É£ Parando aplica√ß√£o atual..."
pm2 stop atenmed 2>/dev/null || log_warning "App n√£o estava rodando"

# 8. Limpar logs antigos (opcional)
echo ""
echo "8Ô∏è‚É£ Limpando logs antigos..."
rm -f logs/*.log
log_step "Logs limpos"

# 9. Reiniciar aplica√ß√£o com PM2
echo ""
echo "9Ô∏è‚É£ Iniciando aplica√ß√£o com PM2..."
pm2 delete atenmed 2>/dev/null || true
pm2 start ecosystem.config.js --env production
pm2 save
log_step "Aplica√ß√£o iniciada!"

# 10. Verificar status
echo ""
echo "üîç Verificando status..."
sleep 3
pm2 status

# 11. Mostrar logs
echo ""
echo "üìã √öltimos logs:"
echo "============================================="
pm2 logs atenmed --lines 20 --nostream

# 12. Instru√ß√µes finais
echo ""
echo "============================================="
echo "‚úÖ DEPLOY CONCLU√çDO!"
echo "============================================="
echo ""
echo "üìã PR√ìXIMOS PASSOS:"
echo ""
echo "1. Configure o .env se ainda n√£o foi feito:"
echo "   nano .env"
echo ""
echo "2. Configure as vari√°veis essenciais:"
echo "   - AI_PROVIDER=gemini"
echo "   - GEMINI_API_KEY=AIzaSyCYJKuN94hPx5evfqY_Zdh2-nfDov_WJm8"
echo "   - GOOGLE_CLIENT_ID=..."
echo "   - GOOGLE_CLIENT_SECRET=..."
echo "   - WHATSAPP_PHONE_ID=..."
echo "   - WHATSAPP_TOKEN=..."
echo ""
echo "3. Reinicie ap√≥s configurar o .env:"
echo "   pm2 restart atenmed"
echo ""
echo "4. Teste os endpoints:"
echo "   curl https://atenmed.com.br/api/health"
echo "   curl https://atenmed.com.br/api/whatsapp/health"
echo ""
echo "5. Configure o webhook do WhatsApp:"
echo "   URL: https://atenmed.com.br/api/whatsapp/webhook"
echo "   Token: (valor de WHATSAPP_VERIFY_TOKEN)"
echo ""
echo "6. Monitore os logs:"
echo "   pm2 logs atenmed"
echo ""
echo "============================================="
echo "üéâ AtenMed v2.0 deployado!"
echo "============================================="

