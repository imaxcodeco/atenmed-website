name: Deploy to Production

on:
  # push:
  #   branches:
  #     - main
  #     - master
  workflow_dispatch: # Deploy manual apenas (via GitHub UI)

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --ignore-scripts

      - name: Build CSS
        run: npm run build:css || echo "Build CSS optional"

      - name: Clean dev dependencies
        run: npm prune --omit=dev

      - name: Create .env file
        run: |
          cat > .env << EOF
          NODE_ENV=production
          PORT=3000
          HOST=0.0.0.0

          # URLs
          APP_URL=https://atenmed.com.br
          CORS_ORIGIN=https://atenmed.com.br,https://www.atenmed.com.br

          # MongoDB
          MONGODB_URI=${{ secrets.MONGODB_URI }}

          # JWT
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          JWT_EXPIRES_IN=7d

          # Email (AWS SES)
          EMAIL_HOST=${{ secrets.EMAIL_HOST }}
          EMAIL_PORT=587
          EMAIL_USER=${{ secrets.EMAIL_USER }}
          EMAIL_PASS=${{ secrets.EMAIL_PASS }}
          EMAIL_FROM=${{ secrets.EMAIL_FROM }}

          # WhatsApp
          WHATSAPP_API_URL=https://graph.facebook.com/v18.0
          WHATSAPP_PHONE_ID=${{ secrets.WHATSAPP_PHONE_ID }}
          WHATSAPP_TOKEN=${{ secrets.WHATSAPP_TOKEN }}
          WHATSAPP_VERIFY_TOKEN=${{ secrets.WHATSAPP_VERIFY_TOKEN }}
          WHATSAPP_APP_SECRET=${{ secrets.WHATSAPP_APP_SECRET }}

          # Google Calendar
          GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
          GOOGLE_REDIRECT_URL=https://atenmed.com.br/api/auth/google/callback

          # Security
          BCRYPT_ROUNDS=12
          SESSION_SECRET=${{ secrets.SESSION_SECRET }}

          # Features
          ENABLE_REMINDERS=true
          ENABLE_WAITLIST=true
          ENABLE_WHATSAPP=true
          ENABLE_GOOGLE_CALENDAR=true
          EOF

      - name: Deploy to Server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT || 22 }}
          command_timeout: 20m
          script: |
            cd /var/www/atenmed || cd ~/atenmed

            # Pull latest code (tentar main, depois reorganizacao-estrutura)
            git pull origin main 2>/dev/null || git pull origin reorganizacao-estrutura || git pull origin master

            # Backup
            mkdir -p backups
            cp .env backups/.env.$(date +%Y%m%d_%H%M%S) 2>/dev/null || true

            # Copy new .env (será feito via secrets)

            # Install dependencies (otimizado para velocidade)
            if [ -d "node_modules" ]; then
              echo "📦 Updating dependencies..."
              npm install --legacy-peer-deps --ignore-scripts
            else
              echo "📦 Installing dependencies (first time)..."
              npm ci --legacy-peer-deps --ignore-scripts
            fi

            # Build CSS
            npm run build:css || echo "Build optional"

            # Remove dev dependencies
            npm prune --omit=dev --legacy-peer-deps

            # Restart with PM2
            pm2 reload ecosystem.config.js --env production || pm2 start ecosystem.config.js --env production
            pm2 save

            # Show status
            pm2 status

            echo "✅ Deploy completed successfully!"

      - name: Health Check
        run: |
          sleep 10
          curl --fail https://atenmed.com.br/health || exit 1
          echo "✅ Health check passed!"

      - name: Notify Success
        if: success()
        run: |
          echo "🎉 Deploy to atenmed.com.br successful!"
          echo "✅ Application is running"
          echo "🌐 URL: https://atenmed.com.br"

      - name: Notify Failure
        if: failure()
        run: |
          echo "❌ Deploy failed!"
          echo "Check logs for details"
